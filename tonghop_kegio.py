import streamlit as st
import pandas as pd

# H√†m t·ªïng h·ª£p k·∫øt qu·∫£ t·ª´ c√°c trang k√™ khai
# Gi·∫£ ƒë·ªãnh d·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o session_state t·ª´ c√°c trang k√™ khai

def tonghop_ketqua():
    st.title("B√°o c√°o t·ªïng h·ª£p d∆∞ gi·ªù/thi·∫øu gi·ªù")
    st.info("Trang n√†y t·ªïng h·ª£p d·ªØ li·ªáu t·ª´ c√°c trang k√™ khai v√† cho ph√©p xu·∫•t ra PDF.")

    # N√∫t t·∫£i d·ªØ li·ªáu t·ª´ Google Sheet c·ªßa user (c√°c sheet c√≥ t√™n b·∫Øt ƒë·∫ßu b·∫±ng 'output_')
    if st.button("T·∫£i d·ªØ li·ªáu c√°c b·∫£ng k√™ khai"):
        spreadsheet = st.session_state.get('spreadsheet')
        if spreadsheet is None:
            st.error("Kh√¥ng t√¨m th·∫•y file Google Sheet c·ªßa b·∫°n trong session_state. H√£y ƒëƒÉng nh·∫≠p l·∫°i ho·∫∑c li√™n h·ªá Admin.")
            return
        try:
            sheet_list = spreadsheet.worksheets()
            # ƒê·ªãnh nghƒ©a th·ª© t·ª± v√† t√™n hi·ªÉn th·ªã
            sheet_order = [
                ("output_giangday", "‚úçÔ∏è B·∫£ng t·ªïng h·ª£p kh·ªëi l∆∞·ª£ng d·∫°y"),
                ("output_thiketthuc", "üìù B·∫£ng t·ªïng h·ª£p kh·ªëi thi k·∫øt th√∫c"),
                ("output_quydoigiam", "‚öñÔ∏è B·∫£ng t·ªïng h·ª£p Gi·∫£m tr·ª´/Ki√™m nhi·ªám"),
                ("output_hoatdong", "üèÉ B·∫£ng t·ªïng h·ª£p K√™ Ho·∫°t ƒë·ªông quy ƒë·ªïi kh√°c")
            ]
            dfs = []
            found_any = False
            for sheet_name, display_name in sheet_order:
                ws = next((ws for ws in sheet_list if ws.title == sheet_name), None)
                if ws is not None:
                    df = pd.DataFrame(ws.get_all_records())
                    if not df.empty:
                        st.subheader(display_name)
                        st.dataframe(df)
                        dfs.append(df)
                        found_any = True
            if dfs:
                st.subheader(":blue[B·∫¢NG T·ªîNG H·ª¢P KH·ªêI L∆Ø·ª¢NG D∆Ø/THI·∫æU GI·ªú]")
                # L·∫•y gi·ªù chu·∫©n t·ª´ session_state n·∫øu c√≥, m·∫∑c ƒë·ªãnh 616
                giochuan = st.session_state.get('giochuan', 616)
                def build_bang_tonghop(dfs, giochuan=616):
                    # TODO: B·ªï sung logic t·ªïng h·ª£p th·ª±c t·∫ø t·ª´ c√°c b·∫£ng dfs
                    # Hi·ªán t·∫°i ch·ªâ l√† m·∫´u, s·∫Ω c·∫≠p nh·∫≠t d·∫ßn
                    import numpy as np
                    tiet_giangday_hk1 = dfs[0]['Ti·∫øt quy ƒë·ªïi HK1'].sum() if len(dfs) > 0 and 'Ti·∫øt quy ƒë·ªïi HK1' in dfs[0] else 0
                    tiet_giangday_hk2 = dfs[0]['Ti·∫øt quy ƒë·ªïi HK2'].sum() if len(dfs) > 0 and 'Ti·∫øt quy ƒë·ªïi HK2' in dfs[0] else 0
                    ra_de_cham_thi_hk1 = dfs[1]['Ti·∫øt quy ƒë·ªïi HK1'].sum() if len(dfs) > 1 and 'Ti·∫øt quy ƒë·ªïi HK1' in dfs[1] else 0
                    ra_de_cham_thi_hk2 = dfs[1]['Ti·∫øt quy ƒë·ªïi HK2'].sum() if len(dfs) > 1 and 'Ti·∫øt quy ƒë·ªïi HK2' in dfs[1] else 0
                    giam_gio = dfs[2]['S·ªë ti·∫øt gi·∫£m'].sum() if len(dfs) > 2 and 'S·ªë ti·∫øt gi·∫£m' in dfs[2] else 0
                    hoatdong_khac = dfs[3]['Ti·∫øt quy ƒë·ªïi'].sum() if len(dfs) > 3 and 'Ti·∫øt quy ƒë·ªïi' in dfs[3] else 0

                    tong_thuchien = tiet_giangday_hk1 + tiet_giangday_hk2 + ra_de_cham_thi_hk1 + ra_de_cham_thi_hk2 + hoatdong_khac - giam_gio
                    du_gio = max(0, tong_thuchien - giochuan)
                    thieu_gio = max(0, giochuan - tong_thuchien)

                    data = {
                        "M·ª§C": ["(1)", "(2)", "(3)", "(4)", "(5)", "(6)", "(7)", "(8)", "(9)", "T·ªïng c·ªông"],
                        "N·ªòI DUNG QUY ƒê·ªîI": [
                            "ƒê·ªãnh m·ª©c gi·∫£ng d·∫°y c·ªßa GV",
                            "Ti·∫øt gi·∫£ng d·∫°y quy ƒë·ªïi (HK1)",
                            "Ti·∫øt gi·∫£ng d·∫°y quy ƒë·ªïi (HK2)",
                            "Ra ƒë·ªÅ, Coi thi, Ch·∫•m thi (HK1)",
                            "Ra ƒë·ªÅ, Coi thi, Ch·∫•m thi (HK2)",
                            "Gi·∫£m gi·ªù Ki√™m nhi·ªám QL√Ω,GVCN...",
                            "H·ªçc t·∫≠p, b·ªìi d∆∞·ª°ng,NCKH",
                            "Th·ª±c t·∫≠p t·∫°i doanh nghi·ªáp",
                            "HD chuy√™n m√¥n kh√°c quy ƒë·ªïi",
                            ""
                        ],
                        "ƒê·ªãnh M·ª©c": [giochuan, None, None, None, None, None, None, None, None, giochuan],
                        "Khi D∆∞ gi·ªù": ["", tiet_giangday_hk1, tiet_giangday_hk2, ra_de_cham_thi_hk1, ra_de_cham_thi_hk2, giam_gio, None, None, hoatdong_khac, du_gio],
                        "Khi Thi·∫øu gi·ªù": ["", tiet_giangday_hk1, tiet_giangday_hk2, ra_de_cham_thi_hk1, ra_de_cham_thi_hk2, giam_gio, None, None, hoatdong_khac, thieu_gio]
                    }
                    df_tonghop = pd.DataFrame(data)
                    return df_tonghop

                df_tonghop = build_bang_tonghop(dfs, giochuan)
                st.dataframe(df_tonghop.style.format(precision=1).set_properties(**{'text-align': 'center'}), use_container_width=True)
                st.session_state['df_all_tonghop'] = df_tonghop
            if not found_any:
                st.warning("Kh√¥ng c√≥ d·ªØ li·ªáu n√†o ƒë·ªÉ t·ªïng h·ª£p t·ª´ c√°c sheet 'output_'.")
        except Exception as e:
            st.error(f"L·ªói khi t·∫£i d·ªØ li·ªáu t·ª´ Google Sheet: {e}")

    # N√∫t xu·∫•t PDF
    if st.button("Xu·∫•t ra PDF"):
        try:
            from fun_to_pdf import export_to_pdf
            df_all = st.session_state.get('df_all_tonghop')
            if df_all is not None:
                export_to_pdf(df_all)
            else:
                st.warning("Ch∆∞a c√≥ d·ªØ li·ªáu t·ªïng h·ª£p ƒë·ªÉ xu·∫•t PDF.")
        except ImportError:
            st.error("Kh√¥ng t√¨m th·∫•y h√†m export_to_pdf trong fun_to_pdf.py. H√£y ki·ªÉm tra l·∫°i.")

def main():
    tonghop_ketqua()

if __name__ == "__main__":
    main()
